{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Feedbackoptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/Statistics/Statistics.js","Components/Feedbackoptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/Section/Section.js","Components/Container/Container.js","Components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","FeedbackOptions","options","onLeaveFeedback","map","option","btn","type","onClick","charAt","toUpperCase","slice","prototype","PropTypes","func","isRequired","Notification","message","notification","Section","title","children","section","Container","App","state","feedback","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,iC,sBCA/BD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,gKC0BfC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,qBAAIC,UAAWC,IAAOC,WAAtB,kBAAwCP,KACxC,qBAAIK,UAAWC,IAAOC,WAAtB,qBAA2CN,KAC3C,qBAAII,UAAWC,IAAOC,WAAtB,iBAAuCL,KACvC,qBAAIG,UAAWC,IAAOC,WAAtB,mBAAyCJ,KACzC,qBAAIE,UAAWC,IAAOC,WAAtB,+BACqBH,EADrB,a,gCCRFI,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEP,UAAWC,IAAOO,IAElBC,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAOI,OAAO,GAAGC,cAAgBL,EAAOM,MAAM,IAJ1CN,SAUbJ,EAAgBW,UAAY,CAC1BnB,KAAMoB,IAAUC,KAAKC,WACrBrB,QAASmB,IAAUC,KAAKC,WACxBpB,IAAKkB,IAAUC,KAAKC,YAGPd,Q,iBCbAe,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAInB,UAAWC,IAAOmB,aAAtB,SAAqCD,K,iBCWxBE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASvB,UAAWC,IAAOuB,QAA3B,UACE,6BAAKF,IACJC,M,iBCKUE,EARG,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAChB,qBAAKvB,UAAWC,IAAOwB,UAAvB,SAAmCF,KCkDtBG,E,4MA9CbC,MAAQ,CACNhC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPQ,gBAAkB,SAAAuB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,4CAItC,WACE,MAA+BG,KAAKJ,MAA5BhC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEjBmC,EAAqBrC,EAAOE,EAAMD,EAClCqC,EAAkCC,KAAKC,MAC1CxC,EAAOqC,EAAsB,KAE1B5B,EAAUgC,OAAOC,KAAKN,KAAKJ,OAEjC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAASA,EACTC,gBAAiB0B,KAAK1B,oBAG1B,cAAC,EAAD,CAASiB,MAAM,aAAf,SACGU,EACC,cAAC,EAAD,CACErC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkC,EACPjC,mBAAoBkC,IAGtB,cAAC,EAAD,CAAcd,QAAQ,+B,GAvChBmB,a,YCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e338ec5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2337R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__h-1zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__Tgmlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__snUHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container___MQpf\"};","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <ul>\n        <li className={styles.statistics}>Good:{good}</li>\n        <li className={styles.statistics}>Neutral:{neutral}</li>\n        <li className={styles.statistics}>Bad:{bad}</li>\n        <li className={styles.statistics}>Total:{total}</li>\n        <li className={styles.statistics}>\n          Positive feedback:{positivePercentage}%\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map(option => (\n      <button\n        className={styles.btn}\n        key={option}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option.charAt(0).toUpperCase() + option.slice(1)}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.prototype = {\n  good: PropTypes.func.isRequired,\n  neutral: PropTypes.func.isRequired,\n  bad: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <h3 className={styles.notification}>{message}</h3>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './Feedbackoptions';\nimport Notification from './Notification';\nimport Section from './Section';\nimport Container from './Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = feedback => {\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const countTotalFeedback = good + bad + neutral;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100,\n    );\n    const options = Object.keys(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}